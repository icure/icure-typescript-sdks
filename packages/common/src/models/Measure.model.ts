/**
 * ICure Medical Device Micro Service
 * ICure Medical Device Micro Service
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CodingReference } from "./CodingReference.model";

export class Measure {
  constructor(json: IMeasure) {
    const { unitCodes, ...simpleProperties } = json;
    Object.assign(this as Measure, simpleProperties as IMeasure);
    this.unitCodes =
      unitCodes && new Set([...unitCodes]?.map((p) => new CodingReference(p)));
  }

  "value"?: number;
  "min"?: number;
  "max"?: number;
  "ref"?: number;
  "severity"?: number;
  "severityCode"?: string;
  "evolution"?: number;
  "unit"?: string;
  "unitCodes"?: Set<CodingReference>;
  "comment"?: string;
  "comparator"?: string;

    static toJSON(instance: Measure): any {
        const pojo: any = {}
        pojo["value"] = instance.value
        pojo["min"] = instance.min
        pojo["max"] = instance.max
        pojo["ref"] = instance.ref
        pojo["severity"] = instance.severity
        pojo["severityCode"] = instance.severityCode
        pojo["evolution"] = instance.evolution
        pojo["unit"] = instance.unit
        pojo["unitCodes"] = Array.from([...instance.unitCodes ?? []]?.map(item => CodingReference.toJSON(item)) ?? [])
        pojo["comment"] = instance.comment
        pojo["comparator"] = instance.comparator
        return pojo
    }

    static fromJSON(pojo: any): Measure {
        return new Measure({value: pojo["value"], min: pojo["min"], max: pojo["max"], ref: pojo["ref"], severity: pojo["severity"], severityCode: pojo["severityCode"], evolution: pojo["evolution"], unit: pojo["unit"], unitCodes: new Set(pojo["unitCodes"]?.map((item: any) => CodingReference.fromJSON(item)) ?? []), comment: pojo["comment"], comparator: pojo["comparator"]})
    }
}

interface IMeasure {
  value?: number;
  min?: number;
  max?: number;
  ref?: number;
  severity?: number;
  severityCode?: string;
  evolution?: number;
  unit?: string;
  unitCodes?: Set<CodingReference>;
  comment?: string;
  comparator?: string;
}
