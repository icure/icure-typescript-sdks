/**
 * ICure Medical Device Micro Service
 * ICure Medical Device Micro Service
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

export class SystemMetaDataOwner {
  constructor(json: ISystemMetaDataOwner) {
    Object.assign(this as SystemMetaDataOwner, json);
  }

  "publicKey": string;
  "hcPartyKeys": Map<string, Array<string>>;
  "privateKeyShamirPartitions": Map<string, string>;
  "aesExchangeKeys": Map<string, Map<string, Map<string, string>>>;
  "transferKeys": Map<string, Map<string, string>>;

    static toJSON(instance: SystemMetaDataOwner): any {
        const pojo: any = {}
        pojo["publicKey"] = instance.publicKey
        pojo["hcPartyKeys"] = Object.fromEntries([...instance.hcPartyKeys.entries()].map(([k, v]) => [k, v.map(item => item)]))
        pojo["privateKeyShamirPartitions"] = Object.fromEntries([...instance.privateKeyShamirPartitions.entries()].map(([k, v]) => [k, v]))
        pojo["aesExchangeKeys"] = Object.fromEntries([...instance.aesExchangeKeys.entries()].map(([k, v]) => [k, Object.fromEntries([...v.entries()].map(([k, v]) => [k, Object.fromEntries([...v.entries()].map(([k, v]) => [k, v]))]))]))
        pojo["transferKeys"] = Object.fromEntries([...instance.transferKeys.entries()].map(([k, v]) => [k, Object.fromEntries([...v.entries()].map(([k, v]) => [k, v]))]))
        return pojo
    }

    static fromJSON(pojo: any): SystemMetaDataOwner {
        return new SystemMetaDataOwner({publicKey: pojo["publicKey"], hcPartyKeys: new Map(Object.entries(pojo["hcPartyKeys"]).map(([k, v]: [any, any]) => [k, v.map((item: any) => item)])), privateKeyShamirPartitions: new Map(Object.entries(pojo["privateKeyShamirPartitions"]).map(([k, v]: [any, any]) => [k, v])), aesExchangeKeys: new Map(Object.entries(pojo["aesExchangeKeys"]).map(([k, v]: [any, any]) => [k, new Map(Object.entries(v).map(([k, v]: [any, any]) => [k, new Map(Object.entries(v).map(([k, v]: [any, any]) => [k, v]))]))])), transferKeys: new Map(Object.entries(pojo["transferKeys"]).map(([k, v]: [any, any]) => [k, new Map(Object.entries(v).map(([k, v]: [any, any]) => [k, v]))]))})
    }
}

interface ISystemMetaDataOwner {
  publicKey?: string;
  hcPartyKeys?: Map<string, Array<string>>;
  privateKeyShamirPartitions?: Map<string, string>;
  aesExchangeKeys?: Map<string, Map<string, Map<string, string>>>;
  transferKeys?: Map<string, Map<string, string>>;
}
