/**
 * ICure Medical Device Micro Service
 * ICure Medical Device Micro Service
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

export class TypedValueObject {
  constructor(json: ITypedValueObject) {
    const { type, ...simpleProperties } = json;
    Object.assign(
      this as TypedValueObject,
      simpleProperties as ITypedValueObject
    );
    this.type = type as TypedValueObjectTypeEnum;
  }

  "type"?: TypedValueObjectTypeEnum;
  "booleanValue"?: boolean;
  "integerValue"?: number;
  "doubleValue"?: number;
  "stringValue"?: string;
  "dateValue"?: number;

    static toJSON(instance: TypedValueObject): any {
        const pojo: any = {}
        pojo["type"] = instance.type
        pojo["booleanValue"] = instance.booleanValue
        pojo["integerValue"] = instance.integerValue
        pojo["doubleValue"] = instance.doubleValue
        pojo["stringValue"] = instance.stringValue
        pojo["dateValue"] = instance.dateValue
        return pojo
    }

    static fromJSON(pojo: any): TypedValueObject {
        return new TypedValueObject({type: pojo["type"], booleanValue: pojo["booleanValue"], integerValue: pojo["integerValue"], doubleValue: pojo["doubleValue"], stringValue: pojo["stringValue"], dateValue: pojo["dateValue"]})
    }
}

interface ITypedValueObject {
  type?: TypedValueObjectTypeEnum;
  booleanValue?: boolean;
  integerValue?: number;
  doubleValue?: number;
  stringValue?: string;
  dateValue?: number;
}

export type TypedValueObjectTypeEnum =
  | "BOOLEAN"
  | "INTEGER"
  | "DOUBLE"
  | "STRING"
  | "DATE"
  | "CLOB"
  | "JSON";
