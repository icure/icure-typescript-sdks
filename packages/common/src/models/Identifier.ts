/**
 * ICure Medical Device Micro Service
 * ICure Medical Device Micro Service
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CodingReference } from "./CodingReference";

/**
 * Typically used for business / client identifiers. An identifier should identify a patient uniquely and unambiguously. However, iCure can't guarantee the uniqueness of those identifiers : This is something you need to take care of.
 */
export class Identifier {
  constructor(json: IIdentifier) {
    const { type, ...simpleProperties } = json;
    Object.assign(this as Identifier, simpleProperties as IIdentifier);
    this.type = type && new CodingReference(type);
  }

  "id"?: string;
  "assigner"?: string;
  "start"?: string;
  "end"?: string;
  "system"?: string;
  "type"?: CodingReference;
  "use"?: string;
  "value"?: string;

    static toJSON(instance: Identifier): any {
        const pojo: any = {}
        pojo["id"] = instance.id
        pojo["assigner"] = instance.assigner
        pojo["start"] = instance.start
        pojo["end"] = instance.end
        pojo["system"] = instance.system
        pojo["type"] = !!instance.type ? CodingReference.toJSON(instance.type) : undefined
        pojo["use"] = instance.use
        pojo["value"] = instance.value
        return pojo
    }

    static fromJSON(pojo: any): Identifier {
        return new Identifier({id: pojo["id"], assigner: pojo["assigner"], start: pojo["start"], end: pojo["end"], system: pojo["system"], type: !!pojo["type"] ? CodingReference.fromJSON(pojo["type"]) : undefined, use: pojo["use"], value: pojo["value"]})
    }
}

interface IIdentifier {
  id?: string;
  assigner?: string;
  start?: string;
  end?: string;
  system?: string;
  type?: CodingReference;
  use?: string;
  value?: string;
}
