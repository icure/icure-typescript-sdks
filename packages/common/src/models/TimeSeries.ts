/**
 * ICure Medical Device Micro Service
 * ICure Medical Device Micro Service
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * A high frequency time-series containing the ts in ms from the start (double) and the values
 */
export class TimeSeries {
  constructor(json: ITimeSeries) {
    Object.assign(this as TimeSeries, json);
  }

  "fields": Array<string>;
  "samples": Array<Array<number>>;
  "min": Array<number>;
  "max": Array<number>;
  "mean": Array<number>;
  "median": Array<number>;
  "variance": Array<number>;

  marshal(): ITimeSeries {
    return {
      ...this,
    };
  }

    static toJSON(instance: TimeSeries): any {
        const pojo: any = {}
        pojo["fields"] = instance.fields.map(item => item)
        pojo["samples"] = instance.samples.map(item => item.map(item => item))
        pojo["min"] = instance.min.map(item => item)
        pojo["max"] = instance.max.map(item => item)
        pojo["mean"] = instance.mean.map(item => item)
        pojo["median"] = instance.median.map(item => item)
        pojo["variance"] = instance.variance.map(item => item)
        return pojo
    }

    static fromJSON(pojo: any): TimeSeries {
        return new TimeSeries({fields: pojo["fields"].map((item: any) => item), samples: pojo["samples"].map((item: any) => item.map((item: any) => item)), min: pojo["min"].map((item: any) => item), max: pojo["max"].map((item: any) => item), mean: pojo["mean"].map((item: any) => item), median: pojo["median"].map((item: any) => item), variance: pojo["variance"].map((item: any) => item)})
    }
}

interface ITimeSeries {
  fields?: Array<string>;
  samples?: Array<Array<number>>;
  min?: Array<number>;
  max?: Array<number>;
  mean?: Array<number>;
  median?: Array<number>;
  variance?: Array<number>;
}
