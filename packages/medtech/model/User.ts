/**
 * ICure Medical Device Micro Service
 * ICure Medical Device Micro Service
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AuthenticationToken } from './AuthenticationToken';
import { Property } from './Property';

import {decodeBase64} from "./ModelHelper";

export class User { 
    constructor(json: JSON | any) {
        Object.assign(this as User, json)
    }

    /**
     * the Id of the user. We encourage using either a v4 UUID or a HL7 Id.
     */
    id?: string;
    /**
     * the revision of the user in the database, used for conflict management / optimistic locking.
     */
    rev?: string;
    deletionDate?: number;
    created?: number;
    /**
     * Last name of the user. This is the official last name that should be used for official administrative purposes.
     */
    name?: string;
    /**
     * Extra properties for the user. Those properties are typed (see class Property)
     */
    properties?: Array<Property>;
    /**
     * Roles assigned to this user
     */
    roles?: Array<string>;
    /**
     * Username for this user. We encourage using an email address
     */
    login?: string;
    /**
     * Hashed version of the password (BCrypt is used for hashing)
     */
    passwordHash?: string;
    /**
     * Secret token used to verify 2fa
     */
    secret?: string;
    /**
     * Whether the user has activated two factors authentication
     */
    use2fa?: boolean;
    /**
     * id of the group (practice/hospital) the user is member of
     */
    groupId?: string;
    /**
     * Id of the healthcare party if the user is a healthcare party.
     */
    healthcarePartyId?: string;
    /**
     * Id of the patient if the user is a patient
     */
    patientId?: string;
    /**
     * Id of the patient if the user is a patient
     */
    deviceId?: string;
    /**
     * Delegations that are automatically generated client side when a new database object is created by this user
     */
    autoDelegations?: { [key: string]: Array<string>; };
    /**
     * email address of the user (used for token exchange or password recovery).
     */
    email?: string;
    /**
     * mobile phone of the user (used for token exchange or password recovery).
     */
    mobilePhone?: string;
    /**
     * Encrypted and time-limited Authentication tokens used for inter-applications authentication
     */
    authenticationTokens?: { [key: string]: AuthenticationToken; };
}

